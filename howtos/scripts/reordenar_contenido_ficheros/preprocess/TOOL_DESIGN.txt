# ==============================================================================
# INDEX
# ==============================================================================

#
# I) Problem identification
# II) Action required: combine the XSD source files
# III) Action required: set the order of dependencies of the XSD source files


#===============================================================================
# I) Problem identification
#===============================================================================

WHY ?

PROBLEM: The CORBA's IDL compilation tools used in the SWIS
	 project do not accept multiple files withe the same module name.

SOLUTION: Join all the IDL files which have the same module in a unique IDL file

ACTION REQUIRED: Combine all the source XSD files with the same
       		 namespace in a unique XSD file.

		 Note.- Then convert (via XSLT) the source file to a
		 IDL file. Finally the IDL will be correctly compiled
		 using the SWIS tools.


#===============================================================================
# II) Action required: combine the XSD source files
#===============================================================================

\brief To combine a set of XSD files we need to :

   a) remove the common header & tail tags from all the files
   b) concat all the files, in the proper order (see III), in a unique file
   c) add the removed tags (see a) to the concat file.


\detail 

# 1) Save the header and tail tags:

  a) <?xml ...  ?>
  b) <schema ... >
  c) </schema ... >


# 2) Remove the duplicate header and tail tags from all the source files:

  [ Code 

perl -n -e 'unless( (/<\?xml/../\?>/) or (/<schema/../>/) or (/<\/schema/../>/) )  { print; }'  xsd_src/uno.xsd 

  End-Code ]


# 3) Concat all the processed XSD files, following the proper order (see III)


# 4) Add the removed tags to the concat file.


# 5) Finally, manually add the required "#include" directives to the
#    created IDL files.

\todo FIXME

  a) tsms.xsd

     Add <include ... fb.xsd>
     Add <include ... ff.xsd>
     Add <include ... fx.xsd>

  b) fb.xsd ("fixm/base")
  
     Add ?  

     <include ... ff.xsd>


  c) ff.xsd ("fixm/foundation")
 
     Add ?

     Note.- none imports found ?

  d) fx.xsd ("fixm/flight")

     Add ?

     <include ... fb.xsd>
     <include ... ff.xsd>


#===============================================================================
# III) Action required: set the order of dependencies of the XSD source files
#===============================================================================

1) Create a list of XSD files in function of the mutual dependencies
   (includes/imports) with each other.


# Resources:

  order_sources.sh   # script to solve the action
                     # See README to learn how to use it.

# input:  ./input/*.xsd (recursion over directory tree supported)

# output: ./output/xsd_ordered_list.csv  # the list or ordered files

# tmp: 	  # (if required) temporary files used during the process
